---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json

controllers:
  # Configure the main controller
  main:
    type: deployment
    enabled: true
    pod:
      hostNetwork: true
    containers:
      # Configure the main application container
      main:
        image:
          repository: homebridge/homebridge
          tag:
          pullPolicy: IfNotPresent
        env:
          TZ: UTC
          PUID: "1000"
          PGID: "1000"
          HOMEBRIDGE_CONFIG_UI: "1"

service:
  # Configure a service for the homebridge application
  main:
    controller: main
    ports:
      http:
        port: 8581

ingress:
  # Configure an Ingress for the main application
  main:
    enabled: true
    className: "nginx"
    hosts:
      - host: homebridge.local
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: main
              port: http
    tls:
      - secretName: homebridge-tls
        hosts:
          - homebridge.local

persistence:
  # Configure the main configuration storage location
  config:
    enabled: true
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /homebridge

configmap:
  scripts:
    # -- Enable custom homebridge startup script
    enabled: false

    data:
      # -- Custom homebridge startup script contents
      # @default -- See values.yaml
      startup.sh: |
        #!/bin/sh

        #
        # Docker Homebridge Custom Startup Script - oznu/homebridge
        #
        # This script can be used to customise the environment and will be executed as
        # the root user each time the container starts.
        #
        # If using this to install plugins DO NOT use the global flag (-g).
        #
        # Example installing homebridge plugin:
        #
        # npm install homebridge-hue
        #
        # Example installing packages using default image (Alpine Linux):
        #
        # apk add --no-cache ffmpeg ffmpeg-libs libpcap-dev
        #
        # If you're running a debian based version of this container please use apt-get to install packages.
        #
        echo "Started successfully."