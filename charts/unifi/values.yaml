---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/app-template-4.2.0/charts/other/app-template/values.schema.json

# Configure options applied to all pods
defaultPodOptions:
  automountServiceAccountToken: false
  securityContext:
    runAsUser: 999
    runAsGroup: 999
    fsGroup: 999
    fsGroupChangePolicy: "OnRootMismatch"

controllers:
  # Configure the main controller
  main:
    type: deployment
    containers:
      # Configure the main application container
      main:
        image:
          # -- image repository
          repository: jacobalberty/unifi
          # @default -- chart.appVersion
          tag: "{{.Chart.AppVersion}}"
          # -- image pull policy
          pullPolicy: IfNotPresent
        # -- environment variables. See more environment variables in the [image documentation](https://github.com/jacobalberty/unifi-docker#environment-variables).
        # @default -- See below
        env:
          # -- Set the container timezone
          TZ: UTC
          # -- Run UniFi as root
          RUNAS_UID0: "false"
          # -- Specify the user ID the application will run as
          UNIFI_UID: "999"
          # -- Specify the group ID the application will run as
          UNIFI_GID: "999"
          # -- Java Virtual Machine (JVM) initial, and minimum, heap size
          # Unset value means there is no lower limit
          JVM_INIT_HEAP_SIZE:
          # -- Java Virtual Machine (JVM) maximum heap size
          # For larger installations a larger value is recommended.
          # For memory constrained system this value can be lowered.
          JVM_MAX_HEAP_SIZE: 1024M
          # # -- External MongoDB URI
          # DB_URI:  # mongodb://unifi-mongodb:27017/unifi
          # STATDB_URI:  # mongodb://unifi-mongodb:27017/unifi_stat
          # DB_NAME:  # unifi
          # LOTSOFDEVICES: true   # Enable this if you have a large number of devices (1000+) or a low powered system (Raspberry Pi, etc.)

# @default -- See values.yaml
service:
  main:
    ports:
      # -- Configure Web interface + API port
      # @default -- See values.yaml
      http:
        port: 8443
        protocol: HTTPS
      # -- Configure Controller port used for device command/control
      # @default -- See values.yaml
      controller:
        enabled: true
        port: 8080
        protocol: TCP
      # -- Configure Captive Portal HTTP port
      # @default -- See values.yaml
      portal-http:
        enabled: false
        port: 8880
        protocol: HTTP
      # -- Configure Captive Portal HTTPS port
      # @default -- See values.yaml
      portal-https:
        enabled: false
        port: 8843
        protocol: HTTPS
      # -- Configure Speedtest port (used for UniFi mobile speed test)
      # @default -- See values.yaml
      speedtest:
        enabled: true
        port: 6789
        protocol: TCP
      # -- Configure STUN port
      # @default -- See values.yaml
      stun:
        enabled: true
        port: 3478
        protocol: UDP
      # -- Configure remote syslog port
      # @default -- See values.yaml
      syslog:
        enabled: true
        port: 5514
        protocol: UDP
      # -- Configure device discovery port
      # @default -- See values.yaml
      discovery:
        enabled: true
        port: 10001
        protocol: UDP

ingress:
  # -- Enable and configure ingress settings for the chart under this key.
  # @default -- See values.yaml
  main:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - host: unifi.example.local
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: main
              port: http
    tls:
      - secretName: unifi-http-tls
        hosts:
          - unifi.example.local

  # -- Enable and configure settings for the captive portal ingress under this key.
  # @default -- See values.yaml
  portal:
    enabled: false
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    hosts:
      - host: unifi.example.local
        paths:
          - path: /
            pathType: Prefix
            service:
              identifier: main
              port: portal-https
    tls:
      - secretName: unifi-http-tls
        hosts:
          - unifi.example.local

persistence:
  # Configure the main configuration storage location
  config:
    enabled: false
    type: persistentVolumeClaim
    accessMode: ReadWriteOnce
    size: 1Gi
    globalMounts:
      - path: /unifi
